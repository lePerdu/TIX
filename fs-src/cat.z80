;
; cat.z80
;

.nolist
#include "tix.inc"
#include "fcntl.inc"
#include "unistd.inc"
.list

.org $0000
.db "TIXE"
.dw $100
.dw $40
.dw text
.dw text_end - text
.dw data
.dw data_end - data

text:
tixe_sec_start("text")

    ; int main(int argc, char *argv[])
    ; Frame pointer
    ld ix, 0
    add ix, sp
argc .equ 2
argv .equ 4

    ld c, (ix + argc)
    ld b, (ix + argc+1)
    ld a, b
    or c
    jr z, done

    ld l, (ix + argv)
    ld h, (ix + argv+1)
cat_files:
    ld e, (hl)
    inc hl
    ld d, (hl)
    inc hl

    push bc
    push hl
        ld hl, O_RDONLY
        syscall open_
        jr c, open_error

read_loop:
        lld iy, buf
        push af
            ld bc, BUF_SIZE
            syscall read_
            jr c, read_error
            ld a, b
            or c
            jr z, close

            ld a, STDOUT_FILENO
            syscall write_
        pop af
        jr read_loop

read_error:
            lld iy, read_err_str
            ld bc, read_err_str_len
            ld a, STDERR_FILENO
            syscall write_
            ;jr close
close:
        pop af
        syscall close_
        jr read_next

open_error:
        lld iy, open_err_str
        ld bc, open_err_str_len
        ld a, STDERR_FILENO
        syscall write_
        ; jr read_next

read_next:
    pop hl
    pop bc

    dec bc
    ld a, b
    or c
    jr nz, cat_files

done:
    ld hl, 0
    syscall exit_

fail:
    ld hl, -1
    syscall exit_

tixe_sec_end()
text_end:

data:
tixe_sec_start("data")

open_err_str:
    .db "Can't open file.\n",0
open_err_str_len .equ $ - open_err_str

read_err_str:
    .db "Can't read file.\n",0
read_err_str_len .equ $ - read_err_str


; Buffer to read data into for efficiency
BUF_SIZE .equ 64
buf:
    .fill BUF_SIZE

tixe_sec_end()
data_end:
