;
; mkdir.z80
;

.nolist
#include "tix.inc"
#include "fcntl.inc"
#include "unistd.inc"
.list

.org $0000
.db "TIXE"
.dw $100
.dw $40
.dw text
.dw text_end - text
.dw data
.dw data_end - data

text:
tixe_sec_start("text")

    ; int main(int argc, char *argv[])
    ; Frame pointer
    ld ix, 0
    add ix, sp
argc .equ 2
argv .equ 4

opt_loop:
    ld a, (ix + argv)
    ld iyl, a
    ld a, (ix + argv+1)
    ld iyh, a
    ld c, (ix + argc)
    ld b, (ix + argc+1)
    lld de, optstring
    lcall getopt

    cp -1
    jr z, opt_end
    cp 'p'
    jr z, opt_p
    cp '?'
    jr z, error_usage

opt_p:
    ld a, RM_ALL_FLAG
    lld (flags), a
    jr opt_loop

opt_end:

    halt

    ; Need at least 1 more argument
    ld c, (ix + argc)
    ld b, (ix + argc+1)
    lld hl, (optind)
    or a
    sbc hl, bc
    jr nc, error_usage

    add hl, bc
    ld b, h \ ld c, l

    ld l, (ix + argv)
    ld h, (ix + argv+1)
    add hl, bc \ add hl, bc
rm_dirs:
    ; (hl) = file name
    ld e, (hl)
    inc hl
    ld d, (hl)
    inc hl
    ld a, d
    or e
    jr z, done

    push hl
_:
        push de
            syscall rmdir_
        pop hl
        jr c, _rm_error

        lld a, (flags)
        and RM_ALL_FLAG
        jr z, _

        ; Remove the parent until the parent is "." or "/" or a deletion fails
        lcall dirname
        ; If the parent is "/" or ".", stop removing the parent
        lld hl, root_str
        lcall strcmp
        jr z, _
        lld hl, dot_str
        lcall strcmp
        jr z, _

        jr -_

_rm_error:
        lld iy, error_str
        ld bc, error_str_len
        ld a, STDERR_FILENO
        syscall write_

        lld a, (flags)
        or RM_ERR_FLAG
        lld (flags), a
_:
    pop hl

    jr rm_dirs

done:
    ; Exit non-0 if there was an error
    lld a, (flags)
    and RM_ERR_FLAG
    ld h, 0
    ld l, a
    ret

error_usage:
    lld iy, usage_str
    ld bc, usage_str_len
    ld a, STDERR_FILENO
    syscall write_

    ld l, (ix + argv)
    ld h, (ix + argv+1)
    ld a, (hl)
    inc hl
    ld h, (hl)
    ld l, a
    lcall strlen
    push hl \ pop iy
    ld a, STDERR_FILENO
    syscall write_

    lld iy, usage_desc_str
    ld bc, usage_desc_str_len
    ld a, STDERR_FILENO
    syscall write_
    ; jr error

error:
    ld hl, -1
    syscall exit_

#include "fs-src/utils.z80"

tixe_sec_end()
text_end:

data:
tixe_sec_start("data")

flags:
    .db 0
RM_ALL_FLAG .equ 1
RM_ERR_FLAG .equ 128

optstring:
    .db "p",0

root_str:
    .db "/",0

dot_str:
    .db ".",0

error_str:
    .db "cannot remove dir\n"
error_str_len .equ $ - error_str

usage_str:
    .db "usage:"
usage_str_len .equ $ - usage_str

usage_desc_str:
    .db " [-p] dir...\n"
usage_desc_str_len .equ $ - usage_desc_str

tixe_sec_end()
data_end:

