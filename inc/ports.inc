;
; ports.inc
;
; Defines names for ports.
; These are for TI83+SE and TI84 calculators. Some ports have different/no
; meanings for the original TI83.
;

#ifndef PORTS_INC_
#define PORTS_INC_

#include "utils.inc"

PORT_KEYPAD .equ $01


; Read
PORT_STATUS     .equ $02
DEFINE_OR_MASK(STATUS_BAT_LEVEL, 0)
DEFINE_OR_MASK(STATUS_LCD_BUSY, 1)

; Write
PORT_INT_ACK    .equ $02
DEFINE_AND_MASK(INT_ACK_ON, 0)
DEFINE_AND_MASK(INT_ACK_TIMER1, 1)
DEFINE_AND_MASK(INT_ACK_TIMER2, 2)
DEFINE_AND_MASK(INT_ACK_LINK, 4)

PORT_INT_MASK   .equ $03
DEFINE_OR_MASK(INT_MASK_ON, 0)
DEFINE_OR_MASK(INT_MASK_TIMER1, 1)
DEFINE_OR_MASK(INT_MASK_TIMER2, 2)
DEFINE_OR_MASK(INT_OFF_ON_HALT, 3)
DEFINE_OR_MASK(INT_MASK_LINK, 4)

; Read
PORT_INT_SOURCE .equ $04
DEFINE_OR_MASK(INT_SRC_ON, 0)
DEFINE_OR_MASK(INT_SRC_TIMER1, 1)
DEFINE_OR_MASK(INT_SRC_TIMER2, 2)
DEFINE_OR_MASK(INT_SRC_ON_HELD, 3)
DEFINE_OR_MASK(INT_SRC_LINK, 4)
DEFINE_OR_MASK(INT_SRC_CRYS1, 5)
DEFINE_OR_MASK(INT_SRC_CRYS2, 6)
DEFINE_OR_MASK(INT_SRC_CRYS3, 7)
; Write (a whole bunch of random things)
; TODO Find a better name
PORT_MAP_TIMER_BAT .equ $04
DEFINE_OR_MASK(MEM_MAP_MODE, 0)
DEFINE_OR_MASK(HWTIMER_BIT1, 1)
DEFINE_OR_MASK(HWTIMER_BIT2, 2)
DEFINE_OR_MASK(BAT_LEVEL_CUTOFF1, 6)
DEFINE_OR_MASK(BAT_LEVEL_CUTOFF2, 7)

PORT_MEM_BANK_C .equ $05
PORT_MEM_BANK_A .equ $06
PORT_MEM_BANK_B .equ $07

PORT_LCD_COM .equ $10
; Read
DEFINE_OR_MASK(LCD_COM_AUTOINC, 0)
DEFINE_OR_MASK(LCD_COM_INC_COL, 1)
DEFINE_OR_MASK(LCD_COM_RESET, 4)
DEFINE_OR_MASK(LCD_COM_ON, 5)
DEFINE_OR_MASK(LCD_COM_8_BIT, 6)
DEFINE_OR_MASK(LCD_COM_BUSY, 7)
; Write
LCD_COM_SET_6_BIT       .equ $00
LCD_COM_SET_8_BIT       .equ $01
LCD_COM_SET_DISABLE     .equ $02
LCD_COM_SET_ENABLE      .equ $03
LCD_COM_SET_ROW_DEC     .equ $04
LCD_COM_SET_ROW_INC     .equ $05
LCD_COM_SET_COL_DEC     .equ $06
LCD_COM_SET_COL_INC     .equ $07
LCD_COM_SET_POW_ENHANCE .equ $08
LCD_COM_SET_MIRROR      .equ $0C
LCD_COM_SET_POWER       .equ $10
LCD_COM_SET_NOTEST      .equ $18
LCD_COM_SET_TEST        .equ $1C
LCD_COM_SET_COL         .equ $20
LCD_COM_SET_Z_OFF       .equ $40
LCD_COM_SET_ROW         .equ $80
LCD_COM_SET_CONTRAST    .equ $C0

PORT_LCD_DAT .equ $11

PORT_FLASH_CTL .equ $14
FLASH_CTL_DISABLE   .equ 0
FLASH_CTL_ENABLE    .equ 1

PORT_CPU_SPEED .equ $20
CPU_SPEED_6MHZ  .equ 0
CPU_SPEED_15MHZ .equ 1
; Also practically 15MHz
CPU_SPEED_15MHZ_2 .equ 2
CPU_SPEED_15MHZ_3 .equ 3

PORT_ROM_EXEC_LOWER .equ $22
PORT_ROM_EXEC_UPPER .equ $23
PORT_ROM_EXEC_MSB   .equ $24
PORT_RAM_EXEC_LOWER .equ $25
PORT_RAM_EXEC_UPPER .equ $26

; Map page 00 to bank C from the end in 64-byte blocks
PORT_RAM_00_C       .equ $27
; Map page 01 to bank B from the start in 64-byte blocks
PORT_RAM_01_MAP       .equ $28

PORT_CRYS1_FREQ     .equ $30
PORT_CRYS1_LOOP     .equ $31
PORT_CRYS1_COUNTER  .equ $32
PORT_CRYS2_FREQ     .equ $33
PORT_CRYS2_LOOP     .equ $34
PORT_CRYS2_COUNTER  .equ $35
PORT_CRYS3_FREQ     .equ $36
PORT_CRYS3_LOOP     .equ $37
PORT_CRYS3_COUNTER  .equ $38
DEFINE_OR_MASK(CRYS_LOOP_ENABLE, 0)
DEFINE_OR_MASK(CRYS_LOOP_INT, 1)

PORT_CLOCK_IN1  .equ $41
PORT_CLOCK_IN2  .equ $42
PORT_CLOCK_IN3  .equ $43
PORT_CLOCK_IN4  .equ $44

PORT_CLOCK_OUT1 .equ $45
PORT_CLOCK_OUT2 .equ $46
PORT_CLOCK_OUT3 .equ $47
PORT_CLOCK_OUT4 .equ $48

#endif

